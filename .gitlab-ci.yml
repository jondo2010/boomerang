variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo

.cargo_build_template: &cargo_build
  stage: build
  script:
    - cargo build --release --all
    - cargo bench --no-run
  artifacts:
    paths:
      - target/release

.cargo_test_template: &cargo_test
  stage: test
  script:
    - cargo test --verbose --jobs 1 --all

cache:
  untracked: true
  paths:
    - cargo/
    - target/

stages:
  - build
  - test
  - docs

#build:stable:cargo:
#  cache:
#    key: stable
#  image: rust
#  <<: *cargo_build

build:nightly:cargo:
  cache:
    key: nightly
  image: registry.gitlab.com/starshell/docker/rust-codecov:nightly
  <<: *cargo_build

test:nightly:cargo:
  cache:
    key: nightly
  image: registry.gitlab.com/starshell/docker/rust-codecov:nightly
  <<: *cargo_test
  after_script:
    - |
      for file in target/debug/*-*[^\.d]; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
      bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN &&
      echo "Uploaded code coverage"

pages:
  image: registry.gitlab.com/starshell/docker/rust-codecov:nightly
  stage: docs
  cache:
    key: nightly
    policy: pull
  script:
    - cargo doc --all --no-deps
    - rm -rf public
    - mkdir public
    - cp -R target/doc/* public
  artifacts:
    paths:
      - public
  only:
    - master
    - tags
